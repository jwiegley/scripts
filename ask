#!/usr/bin/env bash

PROVIDERS="openai,anthropic,openrouter,perplexity"
OPTS=$(getopt -o h:p:m:v --long protocol:,host:,port:,model:,api-key:,bearer:,prefix:,verbose,$PROVIDERS -- "$@")
if [ $? != 0 ]; then
  echo "Failed to parse options." >&2
  exit 1
fi

eval set -- "$OPTS"

PROTOCOL="http"
HOST="localhost"
PORT="8080"
AUTH=()
MODEL=""
API_KEY=""
PREFIX="v1/"
ARGS=("--compressed" "--speed-limit" "1" "--speed-time" "7200" "--max-time" "7200")
VERBOSE=false

# Parse options
while true; do
  case "$1" in
    --protocol)
      PROTOCOL="$2"
      shift 2
      ;;
    -h|--host)
      HOST="$2"
      shift 2
      ;;
    -p|--port)
      PORT="$2"
      shift 2
      ;;
    -m|--model)
      MODEL="$2"
      shift 2
      ;;
    --bearer)
      API_KEY="$2"
      shift 2
      AUTH=("-H" "Authorization: Bearer $API_KEY")
      ;;
    --api-key)
      API_KEY="$2"
      shift 2
      AUTH=("-H" "x-api-key: $API_KEY")
      ;;
    --openai)
      OPENAI_API_KEY=$(pass show api.openai.com | head -1)
      PROTOCOL=https
      HOST=api.openai.com
      PORT=443
      AUTH=("-H" "Authorization: Bearer $OPENAI_API_KEY")
      MODEL=gpt-4.1
      shift 1
      ;;
    --anthropic)
      ANTHROPIC_API_KEY=$(pass show api.anthropic.com | head -1)
      PROTOCOL=https
      HOST=api.anthropic.com
      PORT=443
      AUTH=(-H "x-api-key: $ANTHROPIC_API_KEY" -H "anthropic-version: 2023-06-01")
      MODEL=claude-sonnet-4-20250514
      shift 1
      ;;
    --openrouter)
      OPENROUTER_API_KEY=$(pass show openrouter.ai | head -1)
      PROTOCOL=https
      HOST=openrouter.ai
      PORT=443
      AUTH=("-H" "Authorization: Bearer $OPENROUTER_API_KEY")
      PREFIX="api/v1/"
      MODEL=deepseek/deepseek-r1-0528:free
      shift 1
      ;;
    --perplexity)
      PERPLEXITY_API_KEY=$(pass show api.perplexity.ai | head -1)
      PROTOCOL=https
      HOST=api.perplexity.ai
      PORT=443
      AUTH=("-H" "Authorization: Bearer $PERPLEXITY_API_KEY")
      PREFIX=""
      MODEL=sonar-pro
      shift 1
      ;;
    --prefix)
      PREFIX="$2"
      shift 2
      ;;
    --verbose)
      ARGS+=("--verbose")
      VERBOSE=true
      shift 1
      ;;
    --)
      shift
      break
      ;;
    *)
      echo "Internal error!" >&2
      exit 1
      ;;
  esac
done

echo "Host:  $HOST"
echo "Port:  $PORT"
if [[ -n "$MODEL" ]]; then
    echo "Model: $MODEL"
else
    echo "Please specify the model to ask using --model"
    exit 1
fi
echo ""

if [[ $VERBOSE == true ]]; then
    echo curl -skL "${ARGS[@]}" ${PROTOCOL}://${HOST}:${PORT}/${PREFIX}chat/completions "${AUTH[@]}" "..."
fi

curl -skL "${ARGS[@]}" ${PROTOCOL}://${HOST}:${PORT}/${PREFIX}chat/completions "${AUTH[@]}" \
  -H "Content-Type: application/json" \
  -d "{ \"model\": \"${MODEL}\",
        \"messages\": [
          { \"role\": \"system\", \"content\": \"You are a philosopher. Answer in sufficient detail that I could convince another thinking person of the correctness of your answer, or at least the cogency of your argument\" },
          { \"role\": \"user\", \"content\": \"How much wood would a woodchuck chuck if a woodchuck could chuck wood?\" }
        ],
        \"temperature\": 0.7,
        \"max_tokens\": 2000,
        \"stream\": false
      }" | jq -r
